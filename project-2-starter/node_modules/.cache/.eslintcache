[{"/Users/labri/Desktop/coding/project-2/project-2-starter/src/index.js":"1","/Users/labri/Desktop/coding/project-2/project-2-starter/src/App.js":"2","/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js":"3","/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/DatePage.js":"4","/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/common/Home.js":"5","/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/common/Layout.js":"6","/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/InfoCard.js":"7","/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarImages.js":"8"},{"size":176,"mtime":1645130342517,"results":"9","hashOfConfig":"10"},{"size":1066,"mtime":1645131545988,"results":"11","hashOfConfig":"10"},{"size":4152,"mtime":1645134236494,"results":"12","hashOfConfig":"10"},{"size":1974,"mtime":1645134246730,"results":"13","hashOfConfig":"10"},{"size":836,"mtime":1645134197409,"results":"14","hashOfConfig":"10"},{"size":1037,"mtime":1645134202508,"results":"15","hashOfConfig":"10"},{"size":1072,"mtime":1645134221988,"results":"16","hashOfConfig":"10"},{"size":436,"mtime":1645134195724,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"54mztq",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/labri/Desktop/coding/project-2/project-2-starter/src/index.js",[],[],["46","47"],"/Users/labri/Desktop/coding/project-2/project-2-starter/src/App.js",[],[],"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js",["48"],[],"// import React from \"react\"\nimport Calendar from \"react-calendar\";\nimport React from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport CalendarImages from \"./CalendarImages\"\n// -- import 'react-calendar/dist/Calendar.css' -- // a default styling package\n\nfunction CalendarPage() {\n  const navigate = useNavigate()\n  const [value, setValue] = React.useState(new Date());\n  const [apod, setApod] = React.useState(undefined);\n  let date = new Date()\n   let firstDateOfCurrentMonth = new Date(date.getFullYear(), date.getMonth(), 1)\n  let summerTimeAdjustedFirstDate = new Date(\n    firstDateOfCurrentMonth\n      .getTime() - firstDateOfCurrentMonth.getTimezoneOffset() * 60000\n  ).toISOString().split(\"T\")[0]\n  let formattedToday = new Date(\n    date\n      .getTime() - date.getTimezoneOffset() * 60000\n  ).toISOString().split(\"T\")[0]\n  const [formattedStartDate, setStartDate] = React.useState(summerTimeAdjustedFirstDate);\n  const [formattedEndDate, setEndDate] = React.useState(formattedToday);\n\n  React.useEffect(() => {\n    async function fetchApod() {\n      const resp = await fetch(`https://api.nasa.gov/planetary/apod?start_date=${formattedStartDate}&end_date=${formattedEndDate}&thumbs=true&api_key=ZNZOJj0Nq1kjV9IBBHp5qNWaAfThwOh4Kn98vhuY`);\n      const data = await resp.json();\n      setApod(data);\n    }\n     fetchApod();\n  }, [formattedStartDate, formattedEndDate]);\n\n  function onChange(nextValue) {\n    setValue(nextValue);\n    // this is allowing to navigate the calendar by clicking eg. a day from a different month\n  }\n\n  function onClickDay(value) {\n    // point to the DatePage component\n    const calendarDate = new Date(\n      value.getTime() -\n      value.getTimezoneOffset() * 60000\n    ).toISOString().split('T')[0]\n    const dateToString = calendarDate.toString()\n    console.log(\"date clicked\")\n    navigate(`/datepage/${dateToString}`)\n    console.log(dateToString)\n  }\n\n  function onActiveStartDateChange(action) {\n    let startDate = new Date(\n  action.activeStartDate.getTime() -\n    action.activeStartDate.getTimezoneOffset() * 60000\n)\n    let formattedStartDate = startDate.toISOString().split('T')[0]\n    let lastDate = new Date(startDate.getFullYear()\n, startDate.getMonth()\n + 1, 0)\n    let formattedLastDate = new Date(\n  lastDate.getTime() - lastDate.getTimezoneOffset() * 60000\n).toISOString().split(\"T\")[0]\n    setApod(undefined);\n    setStartDate(formattedStartDate)\n    setEndDate(formattedLastDate)\n  } \n\n  function decideImage({ date }) {\n    if (date <= new Date()) {\n      return (\n        <>\n          {apod ? <CalendarImages {...apod[date.getDate() - 1]} /> : <img src=\"https://cdn.dribbble.com/users/1260892/screenshots/6529031/planets.gif\" alt=\"loading\"/> }\n        </>\n      )\n    }\n  }\n\n  return (\n    <>\n      <h1 className=\"title bold has-text-centered\">Welcome to our Calendar</h1>\n      <div className=\"calendarContainer\">\n      <Calendar\n        // FUNCTIONS\n        onChange={onChange}\n        onClickDay={onClickDay}\n        value={value}\n        onActiveStartDateChange={onActiveStartDateChange}\n\n        // SETTINGS\n        minDetail=\"month\" // this means users can only see a month view (change to year to have year and month options)\n        maxDate={new Date()} // this stops users selecting future dates\n\n        // tileContent={({ date, view }) => view === \"month\" && date.getDate() === 1 ? <img src={apod ? apod[0].url : \"https://miro.medium.com/max/880/0*H3jZONKqRuAAeHnG.jpg\"} /> : null}\n        tileContent={decideImage}\n        // tileContent={tileContentGenerator}\n        \n        selectRange={true} // this allows users to select a range of dates - we will use this to show the pictures from all of these dates\n        defaultView=\"month\"\n        showNeighboringMonth={false}\n\n        className={['react-calendar']} \n        tileClassName=\"tile\"\n        />\n        </div>\n      <div className=\"has-text-centered\">\n        <img width=\"500\"\n          height=\"300\" src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\" />\n      </div>\n      \n    </>\n  );\n}\n\n\nexport default CalendarPage",["49","50"],"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/DatePage.js",[],[],"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/common/Home.js",[],[],"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/common/Layout.js",[],[],"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/InfoCard.js",["51","52"],[],"import React from \"react\"\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport 'swiper/css'\n\nfunction InfoCard ({ title, date, url, media_type, explanation }) {\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-half\">\n        <div>\n          {media_type === \"video\" ? (\n            <iframe\n              width=\"500\"\n              height=\"300\"\n              src={url}\n              title=\"YouTube video player\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n          ) : (\n            <img src={url} alt={title} />\n          )}\n        </div>\n      </div>\n      <div className=\"column is-half\">\n        <div className=\"card\">\n            <div className=\"card-header title\">{title}</div>\n              <p className=\"message-body\">{explanation}</p>\n          <div className=\"card-footer-item card-footer\">{date}</div>\n        </div>\n          </div>\n        </div>\n  \n  )\n}\n\nexport default InfoCard\n","/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarImages.js",[],[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":106,"column":9,"nodeType":"59","endLine":107,"endColumn":163},{"ruleId":"53","replacedBy":"60"},{"ruleId":"55","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":2,"column":18,"nodeType":"64","messageId":"65","endLine":2,"endColumn":29},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["67"],["68"],"no-unused-vars","'Swiper' is defined but never used.","Identifier","unusedVar","'SwiperSlide' is defined but never used.","no-global-assign","no-unsafe-negation"]