{"ast":null,"code":"var _jsxFileName = \"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\"\nimport Calendar from \"react-calendar\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CalendarPage() {\n  _s();\n\n  const [apod, setApod] = React.useState(undefined);\n  const navigate = useNavigate();\n  const [value, setValue] = React.useState(new Date());\n  React.useEffect(() => {\n    async function fetchApod() {\n      const resp = await fetch(\"https://api.nasa.gov/planetary/apod?start_date=2022-02-02&end_date=2022-02-02&api_key=ZNZOJj0Nq1kjV9IBBHp5qNWaAfThwOh4Kn98vhuY\");\n      const data = await resp.json();\n      setApod(data); // console.log(apod)\n    }\n\n    fetchApod();\n  }, []);\n\n  function onChange(nextValue) {\n    setValue(nextValue); // this is allowing to navigate the calendar by clicking eg. a day from a different month\n  }\n\n  function onClickDay() {\n    // point to the DatePage component\n    console.log(\"date clicked\");\n    navigate(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to our Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", { ...apod[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar // FUNCTIONS\n    , {\n      onChange: onChange,\n      onClickDay: onClickDay,\n      value: value // SETTINGS\n      // tileContent={<img src={apod[0].url} />}\n      // titleContent={apod ? <img src={apod[0].url} alt={apod[0].title} /> : <p>Loading image from space...</p>}\n      ,\n      minDetail: \"month\" // this means users can only see a month view (change to year to have year and month options)\n      ,\n      maxDate: new Date(),\n      tileContent: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this) // tileContent={apod ? <CalendarImages {...apod[0]} /> : <p>Loading image from space...</p>}/ this stops users selecting future dates\n      ,\n      selectRange: true // this allows users to select a range of dates - we will use this to show the pictures from all of these dates\n      ,\n      defaultView: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalendarPage, \"QBTGfCuBpydO2Dsg1Z91qN8PfDA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CalendarPage;\nexport default CalendarPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"sources":["/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js"],"names":["Calendar","React","useNavigate","CalendarPage","apod","setApod","useState","undefined","navigate","value","setValue","Date","useEffect","fetchApod","resp","fetch","data","json","onChange","nextValue","onClickDay","console","log"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAeC,SAAf,CAAxB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACK,QAAN,CAAe,IAAIK,IAAJ,EAAf,CAA1B;AAEAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,mBAAeC,SAAf,GAA2B;AACzB,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,gIAAD,CAAxB;AAEA,YAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAZ,MAAAA,OAAO,CAACW,IAAD,CAAP,CAJyB,CAKzB;AACD;;AACDH,IAAAA,SAAS;AACV,GATD,EASG,EATH;;AAWA,WAASK,QAAT,CAAkBC,SAAlB,EAA6B;AAC3BT,IAAAA,QAAQ,CAACS,SAAD,CAAR,CAD2B,CAE3B;AACD;;AAED,WAASC,UAAT,GAAsB;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAd,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,oBAASJ,IAAI,CAAC,CAAD;AAAb;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD,CACE;AADF;AAEE,MAAA,QAAQ,EAAEc,QAFZ;AAGE,MAAA,UAAU,EAAEE,UAHd;AAIE,MAAA,KAAK,EAAEX,KAJT,CAME;AACA;AACA;AARF;AAUE,MAAA,SAAS,EAAC,OAVZ,CAUoB;AAVpB;AAWE,MAAA,OAAO,EAAE,IAAIE,IAAJ,EAXX;AAYE,MAAA,WAAW,eAAE;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAZf,CAaE;AAbF;AAcE,MAAA,WAAW,EAAE,IAdf,CAcqB;AAdrB;AAeE,MAAA,WAAW,EAAC;AAfd;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAyBD;;GApDQR,Y;UAEUD,W;;;KAFVC,Y;AAsDT,eAAeA,YAAf","sourcesContent":["// import React from \"react\"\nimport Calendar from \"react-calendar\";\nimport React from \"react\"\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CalendarPage() {\n  const [apod, setApod] = React.useState(undefined);\n  const navigate = useNavigate()\n  const [value, setValue] = React.useState(new Date());\n\n  React.useEffect(() => {\n    async function fetchApod() {\n      const resp = await fetch(\"https://api.nasa.gov/planetary/apod?start_date=2022-02-02&end_date=2022-02-02&api_key=ZNZOJj0Nq1kjV9IBBHp5qNWaAfThwOh4Kn98vhuY\"\n      );\n      const data = await resp.json();\n      setApod(data);\n      // console.log(apod)\n    }\n    fetchApod();\n  }, []);\n\n  function onChange(nextValue) {\n    setValue(nextValue);\n    // this is allowing to navigate the calendar by clicking eg. a day from a different month\n  }\n\n  function onClickDay() {\n    // point to the DatePage component\n    console.log(\"date clicked\")\n    navigate(\"/\")\n  }\n\n  return (\n    <>\n      <h1>Welcome to our Calendar</h1>\n      <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>\n      <img {...apod[0]} />\n      <Calendar\n        // FUNCTIONS\n        onChange={onChange}\n        onClickDay={onClickDay}\n        value={value}\n\n        // SETTINGS\n        // tileContent={<img src={apod[0].url} />}\n        // titleContent={apod ? <img src={apod[0].url} alt={apod[0].title} /> : <p>Loading image from space...</p>}\n\n        minDetail=\"month\" // this means users can only see a month view (change to year to have year and month options)\n        maxDate={new Date()}\n        tileContent={<img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>}\n        // tileContent={apod ? <CalendarImages {...apod[0]} /> : <p>Loading image from space...</p>}/ this stops users selecting future dates\n        selectRange={true} // this allows users to select a range of dates - we will use this to show the pictures from all of these dates\n        defaultView=\"month\"\n      />\n    </>\n  );\n\n}\n\nexport default CalendarPage"]},"metadata":{},"sourceType":"module"}