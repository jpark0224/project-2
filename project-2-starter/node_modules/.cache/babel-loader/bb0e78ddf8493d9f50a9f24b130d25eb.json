{"ast":null,"code":"var _jsxFileName = \"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\"\nimport Calendar from \"react-calendar\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CalendarImages from \"./CalendarImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CalendarPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const [value, setValue] = React.useState(new Date());\n  const [apod, setApod] = React.useState(undefined);\n  React.useEffect(() => {\n    async function fetchApod() {\n      const resp = await fetch(\"https://api.nasa.gov/planetary/apod?start_date=2022-01-31&end_date=2022-02-15&thumbs=true&api_key=ZNZOJj0Nq1kjV9IBBHp5qNWaAfThwOh4Kn98vhuY\");\n      const data = await resp.json();\n      setApod(data);\n    }\n\n    fetchApod();\n  }, []);\n\n  function onChange(nextValue) {\n    setValue(nextValue); // this is allowing to navigate the calendar by clicking eg. a day from a different month\n  }\n\n  function onClickDay() {\n    // point to the DatePage component\n    console.log(\"date clicked\");\n    navigate(\"/\");\n  }\n\n  function decideImage(_ref) {\n    let {\n      date\n    } = _ref;\n\n    if (date.getDate() === 1) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this);\n    } else if (date.getDate() === 2) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this);\n    } else {\n      return null;\n    } // return (\n    // date.getDate() === 1 ? <CalendarImages /> : null\n    // {switch({date.getDate()}) {\n    //   case 1:\n    //     <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>\n    //     break;\n    //   case 2:\n    //     <img src=\"https://images.pexels.com/users/avatars/930404/space-space-885.jpeg?auto=compress&fit=crop&h=256&w=256\"/>\n    //     break;\n    //   default:\n    //     null\n    // }\n    // if (date.getDate() === 1) {\n    //   <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>\n    // } else if (date.getDate() === 2) {\n    //   <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>\n    // } else {\n    //   null\n    // }\n    //   date.getDate() === 1 ? <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/> : null\n    // )\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to our Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar // FUNCTIONS\n    , {\n      onChange: onChange,\n      onClickDay: onClickDay,\n      value: value // SETTINGS\n      ,\n      minDetail: \"month\" // this means users can only see a month view (change to year to have year and month options)\n      ,\n      maxDate: new Date() // this stops users selecting future dates\n      // tileContent={({ date, view }) => view === \"month\" && date.getDate() === 1 ? <img src={apod ? apod[0].url : \"https://miro.medium.com/max/880/0*H3jZONKqRuAAeHnG.jpg\"} /> : null}\n      ,\n      tileContent: decideImage // tileContent={tileContentGenerator}\n      ,\n      selectRange: true // this allows users to select a range of dates - we will use this to show the pictures from all of these dates\n      ,\n      defaultView: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalendarPage, \"rvV7fm5UpkIuP0V9z2YQxMgKzZc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CalendarPage;\nexport default CalendarPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"sources":["/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js"],"names":["Calendar","React","useNavigate","CalendarImages","CalendarPage","navigate","value","setValue","useState","Date","apod","setApod","undefined","useEffect","fetchApod","resp","fetch","data","json","onChange","nextValue","onClickDay","console","log","decideImage","date","getDate"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,IAAIC,IAAJ,EAAf,CAA1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACO,QAAN,CAAeI,SAAf,CAAxB;AAEAX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,mBAAeC,SAAf,GAA2B;AACzB,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,4IAAD,CAAxB;AACA,YAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAP,MAAAA,OAAO,CAACM,IAAD,CAAP;AACD;;AACDH,IAAAA,SAAS;AACV,GAPD,EAOG,EAPH;;AAUA,WAASK,QAAT,CAAkBC,SAAlB,EAA6B;AAC3Bb,IAAAA,QAAQ,CAACa,SAAD,CAAR,CAD2B,CAE3B;AACD;;AAED,WAASC,UAAT,GAAsB;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAlB,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;;AAED,WAASmB,WAAT,OAA+B;AAAA,QAAV;AAAEC,MAAAA;AAAF,KAAU;;AAE7B,QAAIA,IAAI,CAACC,OAAL,OAAmB,CAAvB,EAA0B;AACxB,0BAAQ;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFD,MAEO,IAAID,IAAI,CAACC,OAAL,OAAmB,CAAvB,EAA0B;AAC/B,0BAAQ;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFM,MAEA;AACL,aAAQ,IAAR;AACD,KAR4B,CAU7B;AACE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AAEA;;AAED;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD,CACE;AADF;AAEE,MAAA,QAAQ,EAAEP,QAFZ;AAGE,MAAA,UAAU,EAAEE,UAHd;AAIE,MAAA,KAAK,EAAEf,KAJT,CAME;AANF;AAOE,MAAA,SAAS,EAAC,OAPZ,CAOoB;AAPpB;AAQE,MAAA,OAAO,EAAE,IAAIG,IAAJ,EARX,CAQuB;AAErB;AAVF;AAWE,MAAA,WAAW,EAAEe,WAXf,CAaE;AAbF;AAeE,MAAA,WAAW,EAAE,IAff,CAeqB;AAfrB;AAgBE,MAAA,WAAW,EAAC;AAhBd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAyBD;;GAzFQpB,Y;UACUF,W;;;KADVE,Y;AA2FT,eAAeA,YAAf","sourcesContent":["// import React from \"react\"\nimport Calendar from \"react-calendar\";\nimport React from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport CalendarImages from \"./CalendarImages\"\n\nfunction CalendarPage() {\n  const navigate = useNavigate()\n  const [value, setValue] = React.useState(new Date());\n  const [apod, setApod] = React.useState(undefined);\n\n  React.useEffect(() => {\n    async function fetchApod() {\n      const resp = await fetch(\"https://api.nasa.gov/planetary/apod?start_date=2022-01-31&end_date=2022-02-15&thumbs=true&api_key=ZNZOJj0Nq1kjV9IBBHp5qNWaAfThwOh4Kn98vhuY\");\n      const data = await resp.json();\n      setApod(data);\n    }\n    fetchApod();\n  }, []);\n\n\n  function onChange(nextValue) {\n    setValue(nextValue);\n    // this is allowing to navigate the calendar by clicking eg. a day from a different month\n  }\n\n  function onClickDay() {\n    // point to the DatePage component\n    console.log(\"date clicked\")\n    navigate(\"/\")\n  }\n\n  function decideImage({ date }) {\n\n    if (date.getDate() === 1) {\n      return (<img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>)\n    } else if (date.getDate() === 2) {\n      return (<img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>)\n    } else {\n      return (null)\n    }\n\n    // return (\n      // date.getDate() === 1 ? <CalendarImages /> : null\n\n      // {switch({date.getDate()}) {\n      //   case 1:\n      //     <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>\n      //     break;\n      //   case 2:\n      //     <img src=\"https://images.pexels.com/users/avatars/930404/space-space-885.jpeg?auto=compress&fit=crop&h=256&w=256\"/>\n      //     break;\n      //   default:\n      //     null\n      // }\n\n      // if (date.getDate() === 1) {\n      //   <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>\n      // } else if (date.getDate() === 2) {\n      //   <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/>\n      // } else {\n      //   null\n      // }\n      \n    //   date.getDate() === 1 ? <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"/> : null\n    \n    // )\n    \n  }\n\n  return (\n    <>\n      <h1>Welcome to our Calendar</h1>\n      <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\" />\n      <Calendar\n        // FUNCTIONS\n        onChange={onChange}\n        onClickDay={onClickDay}\n        value={value}\n\n        // SETTINGS\n        minDetail=\"month\" // this means users can only see a month view (change to year to have year and month options)\n        maxDate={new Date()} // this stops users selecting future dates\n\n        // tileContent={({ date, view }) => view === \"month\" && date.getDate() === 1 ? <img src={apod ? apod[0].url : \"https://miro.medium.com/max/880/0*H3jZONKqRuAAeHnG.jpg\"} /> : null}\n        tileContent={decideImage}\n\n        // tileContent={tileContentGenerator}\n        \n        selectRange={true} // this allows users to select a range of dates - we will use this to show the pictures from all of these dates\n        defaultView=\"month\"\n      />\n    </>\n  );\n\n}\n\nexport default CalendarPage"]},"metadata":{},"sourceType":"module"}