{"ast":null,"code":"var _jsxFileName = \"/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\"\nimport Calendar from \"react-calendar\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CalendarImages from \"./CalendarImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CalendarPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const [value, setValue] = React.useState(new Date());\n\n  function onChange(nextValue) {\n    setValue(nextValue); // this is allowing to navigate the calendar by clicking eg. a day from a different month\n  }\n\n  function onClickDay() {\n    // point to the DatePage component\n    console.log(\"date clicked\");\n    navigate(\"/\");\n  }\n\n  function decideImage(_ref) {\n    let {\n      date\n    } = _ref;\n    return date.getDate() === 1 ? /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 35\n    }, this) : null;\n  }\n\n  console.log( /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 15\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to our Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar // FUNCTIONS\n    , {\n      onChange: onChange,\n      onClickDay: onClickDay,\n      value: value // SETTINGS\n      ,\n      minDetail: \"month\" // this means users can only see a month view (change to year to have year and month options)\n      ,\n      maxDate: new Date() // this stops users selecting future dates\n      // tileContent={({ date, view }) => view === \"month\" && date.getDate() === 1 ? <img src={apod ? apod[0].url : \"https://miro.medium.com/max/880/0*H3jZONKqRuAAeHnG.jpg\"} /> : null}\n      // tileContent={<CalendarImages />}\n      ,\n      tileContent: decideImage // tileContent={tileContentGenerator}\n      ,\n      selectRange: true // this allows users to select a range of dates - we will use this to show the pictures from all of these dates\n      ,\n      defaultView: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalendarPage, \"nsA++Z80kdyViygfq8xUc9ecgvw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CalendarPage;\nexport default CalendarPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"sources":["/Users/labri/Desktop/coding/project-2/project-2-starter/src/components/pictureOfTheDay/CalendarPage.js"],"names":["Calendar","React","useNavigate","CalendarImages","CalendarPage","navigate","value","setValue","useState","Date","onChange","nextValue","onClickDay","console","log","decideImage","date","getDate"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,IAAIC,IAAJ,EAAf,CAA1B;;AAEA,WAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3BJ,IAAAA,QAAQ,CAACI,SAAD,CAAR,CAD2B,CAE3B;AACD;;AAED,WAASC,UAAT,GAAsB;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAT,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;;AAED,WAASU,WAAT,OAA+B;AAAA,QAAV;AAAEC,MAAAA;AAAF,KAAU;AAC7B,WAAOA,IAAI,CAACC,OAAL,OAAmB,CAAnB,gBAAuB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAvB,GAAsC,IAA7C;AACD;;AAEDJ,EAAAA,OAAO,CAACC,GAAR,eAAY,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD,CACE;AADF;AAEE,MAAA,QAAQ,EAAEJ,QAFZ;AAGE,MAAA,UAAU,EAAEE,UAHd;AAIE,MAAA,KAAK,EAAEN,KAJT,CAME;AANF;AAOE,MAAA,SAAS,EAAC,OAPZ,CAOoB;AAPpB;AAQE,MAAA,OAAO,EAAE,IAAIG,IAAJ,EARX,CAQuB;AAErB;AACA;AAXF;AAYE,MAAA,WAAW,EAAEM,WAZf,CAcE;AAdF;AAgBE,MAAA,WAAW,EAAE,IAhBf,CAgBqB;AAhBrB;AAiBE,MAAA,WAAW,EAAC;AAjBd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA0BD;;GA/CQX,Y;UACUF,W;;;KADVE,Y;AAiDT,eAAeA,YAAf","sourcesContent":["// import React from \"react\"\nimport Calendar from \"react-calendar\";\nimport React from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport CalendarImages from \"./CalendarImages\"\n\nfunction CalendarPage() {\n  const navigate = useNavigate()\n  const [value, setValue] = React.useState(new Date());\n\n  function onChange(nextValue) {\n    setValue(nextValue);\n    // this is allowing to navigate the calendar by clicking eg. a day from a different month\n  }\n\n  function onClickDay() {\n    // point to the DatePage component\n    console.log(\"date clicked\")\n    navigate(\"/\")\n  }\n\n  function decideImage({ date }) {\n    return date.getDate() === 1 ? <Calendar /> : null\n  }\n\n  console.log(<Calendar></Calendar>)\n\n  return (\n    <>\n      <h1>Welcome to our Calendar</h1>\n      <img src=\"https://media4.giphy.com/media/l0Iych4GHWMRxci2I/giphy.gif?cid=790b761194122cfca4d97229dc5a95369c32bf677d08d9ad&rid=giphy.gif&ct=g\" />\n      <Calendar\n        // FUNCTIONS\n        onChange={onChange}\n        onClickDay={onClickDay}\n        value={value}\n\n        // SETTINGS\n        minDetail=\"month\" // this means users can only see a month view (change to year to have year and month options)\n        maxDate={new Date()} // this stops users selecting future dates\n\n        // tileContent={({ date, view }) => view === \"month\" && date.getDate() === 1 ? <img src={apod ? apod[0].url : \"https://miro.medium.com/max/880/0*H3jZONKqRuAAeHnG.jpg\"} /> : null}\n        // tileContent={<CalendarImages />}\n        tileContent={decideImage}\n\n        // tileContent={tileContentGenerator}\n        \n        selectRange={true} // this allows users to select a range of dates - we will use this to show the pictures from all of these dates\n        defaultView=\"month\"\n      />\n    </>\n  );\n\n}\n\nexport default CalendarPage"]},"metadata":{},"sourceType":"module"}